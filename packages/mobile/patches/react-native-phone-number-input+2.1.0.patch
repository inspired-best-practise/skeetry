diff --git a/node_modules/react-native-phone-number-input/lib/index.js b/node_modules/react-native-phone-number-input/lib/index.js
index b89c388..9bdaeec 100644
--- a/node_modules/react-native-phone-number-input/lib/index.js
+++ b/node_modules/react-native-phone-number-input/lib/index.js
@@ -1,13 +1,10 @@
+import { AsYouTypeFormatter, PhoneNumberUtil } from "google-libphonenumber";
 import React, { PureComponent } from "react";
-import { View, Text, TouchableOpacity, Image, TextInput } from "react-native";
+import { Image, Text, TextInput, TouchableOpacity, View } from "react-native";
 import CountryPicker, {
-  getCallingCode,
-  DARK_THEME,
-  DEFAULT_THEME,
-  CountryModalProvider,
-  Flag,
+  CountryModalProvider, DARK_THEME,
+  DEFAULT_THEME, Flag, getCallingCode
 } from "react-native-country-picker-modal";
-import { PhoneNumberUtil } from "google-libphonenumber";
 import styles from "./styles";
 
 const dropDown =
@@ -92,17 +89,24 @@ export default class PhoneInput extends PureComponent {
   };
 
   onChangeText = (text) => {
-    this.setState({ number: text });
+    const originalNumber = (text.match(/\d/g) ?? []).join("");
     const { onChangeText, onChangeFormattedText } = this.props;
+    const formatter = new AsYouTypeFormatter(this.state.countryCode || 'US');
+    let formatted = '';
+    formatter.clear();
+    for (let c of originalNumber) {
+      formatted = formatter.inputDigit(c);
+    }
+    this.setState({ number: formatted });
     if (onChangeText) {
-      onChangeText(text);
+      onChangeText(originalNumber);
     }
     if (onChangeFormattedText) {
       const { code } = this.state;
       if (code) {
-        onChangeFormattedText(text.length > 0 ? `+${code}${text}` : text);
+        onChangeFormattedText(originalNumber.length > 0 ? `+${code}${originalNumber}` : originalNumber);
       } else {
-        onChangeFormattedText(text);
+        onChangeFormattedText(originalNumber);
       }
     }
   };
